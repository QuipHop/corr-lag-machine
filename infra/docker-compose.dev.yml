services:
  postgres:
    image: postgres:16-alpine
    container_name: cc-postgres
    environment:
      POSTGRES_DB: ccdb
      POSTGRES_USER: cc
      POSTGRES_PASSWORD: cc
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data

  adminer:
    image: adminer:latest
    container_name: cc-adminer
    depends_on:
      - postgres
    ports:
      - "8080:8080"

  backend:
    image: node:20
    container_name: cc-backend
    working_dir: /app
    depends_on:
      - postgres
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://cc:cc@postgres:5432/ccdb
      ML_SVC_URL: http://ml-svc:8000
      # help watchers in Docker
      CHOKIDAR_USEPOLLING: "1"
      CHOKIDAR_INTERVAL: "500"
      WATCHPACK_POLLING: "true"
    volumes:
      - ../backend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    command: >
      sh -c "
        npm ci &&
        npm run prisma:generate &&
        npx prisma migrate deploy &&
        npm run dev
      "

  ml-svc:
    image: python:3.11-slim
    container_name: cc-mlsvc
    working_dir: /app
    volumes:
      - ../ml-svc:/app
    environment:
      PYTHONDONTWRITEBYTECODE: "1"
      PYTHONUNBUFFERED: "1"
    ports:
      - "8000:8000"
    command: >
      sh -c "
        pip install --no-cache-dir -r requirements.txt &&
        uvicorn app:app --host 0.0.0.0 --port 8000 --reload
      "

  frontend:
    image: node:20-alpine
    container_name: cc-frontend
    working_dir: /app
    depends_on:
      - backend
    environment:
      NODE_ENV: development
      # Browser calls the backend via host port 3000
      VITE_API_BASE: http://localhost:3000
      # Vite file watching in Docker
      CHOKIDAR_USEPOLLING: "1"
      CHOKIDAR_INTERVAL: "500"
      WATCHPACK_POLLING: "true"
    volumes:
      - ../frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    command: >
      sh -c "
        npm ci &&
        npm run dev -- --host 0.0.0.0 --port 5173
      "

volumes:
  dbdata:
